require(kknn)
data(iris)
m <- dim(iris)[1]
val <- sample(1:m, size = round(m/3), replace = FALSE,
prob = rep(1/m, m))
iris.learn <- iris[-val,]
iris.valid <- iris[val,]
iris.kknn <- kknn(Species~., iris.learn, iris.valid, distance = 1,
kernel = "triangular")
summary(iris.kknn)
fit <- fitted(iris.kknn)
table(iris.valid$Species, fit)
pcol <- as.character(as.numeric(iris.valid$Species))
pairs(iris.valid[1:4], pch = pcol, col = c("green3", "red”)[(iris.valid$Species != fit)+1])
data(swiss)
pairs(~ Fertility + Education + Catholic, data = swiss, subset = Education < 20, main = "Swiss data, Education < 20")
library(kknn)
spam.kknn <- kknn(spam~., train, test, distance = 1,
kernel = "triangular")
summary(spam.kknn)
library(kknn)
spam.kknn <- kknn(spam~., train, test, distance = 1,
kernel = "triangular")
summary(spam.kknn)
View(iris)
View(iris)
library(gdata)
library(dplyr)
#faster xls reader but requires perl!
bronx1<- read.csv("C:/Users/91983/OneDrive/Desktop/RPI-material/DA/Assignment4/NYC_Citywide_Annualized_Calendar_Sales_Update.csv")
bronx1<-bronx1[which(bronx1$GROSS.SQUARE.FEET!="0" & bronx1$LAND.SQUARE.FEET!="0" & bronx1$SALE.PRICE!="$0"),]
#alternate
#library("xlsx", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
#bronx1<-read.xls
x("<SOMEWHERE>/rollingsales_bronx.xls",pattern="BOROUGH",stringsAsFactors=FALSE,sheetIndex=1,startRow=5,header=TRUE)
data = bronx1[complete.cases(bronx1),]
m1<-lm(log(SALE.PRICE)~log(GROSS.SQUARE.FEET))
#
bronx1 <- select(GROSS.SQUARE.FEET, SALE.PRICE)
#faster xls reader but requires perl!
bronx1<- read.csv("C:/Users/91983/OneDrive/Desktop/RPI-material/DA/Assignment4/NYC_Citywide_Annualized_Calendar_Sales_Update.csv")
bronx1<-bronx1[which(bronx1$GROSS.SQUARE.FEET!="0" & bronx1$LAND.SQUARE.FEET!="0" & bronx1$SALE.PRICE!="$0"),]
#alternate
#library("xlsx", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
#bronx1<-read.xls
x("<SOMEWHERE>/rollingsales_bronx.xls",pattern="BOROUGH",stringsAsFactors=FALSE,sheetIndex=1,startRow=5,header=TRUE)
m1<-lm(log(SALE.PRICE)~log(GROSS.SQUARE.FEET))
library(gdata)
library(dplyr)
#faster xls reader but requires perl!
bronx1<- read.csv("C:/Users/91983/OneDrive/Desktop/RPI-material/DA/Assignment4/NYC_Citywide_Annualized_Calendar_Sales_Update.csv")
bronx1<-bronx1[which(bronx1$GROSS.SQUARE.FEET!="0" & bronx1$LAND.SQUARE.FEET!="0" & bronx1$SALE.PRICE!="$0"),]
#alternate
#library("xlsx", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
#bronx1<-read.xls
x("<SOMEWHERE>/rollingsales_bronx.xls",pattern="BOROUGH",stringsAsFactors=FALSE,sheetIndex=1,startRow=5,header=TRUE)
#faster xls reader but requires perl!
bronx1<- read.csv("C:/Users/91983/OneDrive/Desktop/RPI-material/DA/Assignment4/NYC_Citywide_Annualized_Calendar_Sales_Update.csv")
bronx1<-bronx1[which(bronx1$GROSS.SQUARE.FEET!="0" & bronx1$LAND.SQUARE.FEET!="0" & bronx1$SALE.PRICE!="$0"),]
attach(bronx1)
# If you choose to attach, leave out the "data=." in lm regression
SALE.PRICE<-sub("\\$","",SALE.PRICE)
SALE.PRICE<-as.numeric(gsub(",","", SALE.PRICE))
GROSS.SQUARE.FEET<-as.numeric(gsub(",","", GROSS.SQUARE.FEET))
LAND.SQUARE.FEET<-as.numeric(gsub(",","", LAND.SQUARE.FEET))
plot(log(GROSS.SQUARE.FEET), log(SALE.PRICE))
data = bronx1[complete.cases(bronx1),]
m1<-lm(log(SALE.PRICE)~log(GROSS.SQUARE.FEET))
bronx1 <- bronx1  %>% select("LAND.SQUARE.FEET", "GROSS.SQUARE.FEET", "SALE.PRICE")
str(bronx1)
# If you choose to attach, leave out the "data=." in lm regression
SALE.PRICE<-sub("\\$","",SALE.PRICE)
SALE.PRICE<-as.numeric(gsub(",","", SALE.PRICE))
GROSS.SQUARE.FEET<-as.numeric(gsub(",","", GROSS.SQUARE.FEET))
LAND.SQUARE.FEET<-as.numeric(gsub(",","", LAND.SQUARE.FEET))
str(bronx1)
bronx1[["GROSS.SQUARE.FEET"]] <- as.numeric((gsub("[^0-9]","", bronx1[["GROSS.SQUARE.FEET"]])))
str(bronx1)
bronx1[["LAND.SQUARE.FEET"]] <- as.numeric((gsub("[^0-9]","", bronx1[["LAND.SQUARE.FEET"]])))
str(bronx1)
plot(log(GROSS.SQUARE.FEET), log(SALE.PRICE))
data = bronx1[complete.cases(bronx1),]
attach(bronx1)
m1<-lm(log(SALE.PRICE)~log(GROSS.SQUARE.FEET))
m1<-lm(log(bronx1$SALE.PRICE)~log(bronx1$GROSS.SQUARE.FEET))
m1<-lm(log(data$SALE.PRICE)~log(data$GROSS.SQUARE.FEET))
str(bronx1)
m1 <- lm(SALE.PRICE ~ LAND.SQUARE.FEET + GROSS.SQUARE.FEET, data = data)
summary(m1)
abline(m1,col="red",lwd=2)
plot(resid(m1))
m2<-lm(log(bronx1$SALE.PRICE)~log(bronx1$GROSS.SQUARE.FEET)+log(bronx1$LAND.SQUARE.FEET)+factor(bronx1$NEIGHBORHOOD))
summary(m2)
#faster xls reader but requires perl!
bronx1<- read.csv("C:/Users/91983/OneDrive/Desktop/RPI-material/DA/Assignment4/NYC_Citywide_Annualized_Calendar_Sales_Update.csv")
bronx1<-bronx1[which(bronx1$GROSS.SQUARE.FEET!="0" & bronx1$LAND.SQUARE.FEET!="0" & bronx1$SALE.PRICE!="$0"),]
m2<-lm(log(bronx1$SALE.PRICE)~log(bronx1$GROSS.SQUARE.FEET)+log(bronx1$LAND.SQUARE.FEET)+factor(bronx1$NEIGHBORHOOD))
m2<-lm(log(bronx1$SALE.PRICE)~log(bronx1$GROSS.SQUARE.FEET)+log(bronx1$LAND.SQUARE.FEET)+factor(bronx1$NEIGHBORHOOD))
library(gdata)
library(dplyr)
#faster xls reader but requires perl!
bronx1<- read.csv("C:/Users/91983/OneDrive/Desktop/RPI-material/DA/Assignment4/NYC_Citywide_Annualized_Calendar_Sales_Update.csv")
bronx1<-bronx1[which(bronx1$GROSS.SQUARE.FEET!="0" & bronx1$LAND.SQUARE.FEET!="0" & bronx1$SALE.PRICE!="$0"),]
attach(bronx1)
bronx1 <- bronx1  %>% select("LAND.SQUARE.FEET", "GROSS.SQUARE.FEET", "SALE.PRICE")
str(bronx1)
bronx1[["GROSS.SQUARE.FEET"]] <- as.numeric((gsub("[^0-9]","", bronx1[["GROSS.SQUARE.FEET"]])))
bronx1[["LAND.SQUARE.FEET"]] <- as.numeric((gsub("[^0-9]","", bronx1[["LAND.SQUARE.FEET"]])))
# If you choose to attach, leave out the "data=." in lm regression
SALE.PRICE<-sub("\\$","",SALE.PRICE)
SALE.PRICE<-as.numeric(gsub(",","", SALE.PRICE))
GROSS.SQUARE.FEET<-as.numeric(gsub(",","", GROSS.SQUARE.FEET))
LAND.SQUARE.FEET<-as.numeric(gsub(",","", LAND.SQUARE.FEET))
plot(log(GROSS.SQUARE.FEET), log(SALE.PRICE))
data = bronx1[complete.cases(bronx1),]
m1 <- lm(SALE.PRICE ~ LAND.SQUARE.FEET + GROSS.SQUARE.FEET, data = data)
summary(m1)
abline(m1,col="red",lwd=2)
plot(resid(m1))
m2<-lm(log(bronx1$SALE.PRICE)~log(bronx1$GROSS.SQUARE.FEET)+log(bronx1$LAND.SQUARE.FEET)+factor(bronx1$NEIGHBORHOOD))
m2<-lm(log(bronx1$SALE.PRICE)~log(bronx1$GROSS.SQUARE.FEET)+log(bronx1$LAND.SQUARE.FEET)+factor(bronx1$NEIGHBORHOOD))
summary(m2)
plot(resid(m2))
m2<-lm(log(bronx1$SALE.PRICE)~log(bronx1$GROSS.SQUARE.FEET)+log(bronx1$LAND.SQUARE.FEET)+factor(bronx1$NEIGHBORHOOD))
#faster xls reader but requires perl!
bronx1<- read.csv("C:/Users/91983/OneDrive/Desktop/RPI-material/DA/Assignment4/NYC_Citywide_Annualized_Calendar_Sales_Update.csv")
bronx1<-bronx1[which(bronx1$GROSS.SQUARE.FEET!="0" & bronx1$LAND.SQUARE.FEET!="0" & bronx1$SALE.PRICE!="$0"),]
attach(bronx1)
m2<-lm(log(bronx1$SALE.PRICE)~log(bronx1$GROSS.SQUARE.FEET)+log(bronx1$LAND.SQUARE.FEET)+factor(bronx1$NEIGHBORHOOD))
bronx1[["GROSS.SQUARE.FEET"]] <- as.numeric((gsub("[^0-9]","", bronx1[["GROSS.SQUARE.FEET"]])))
bronx1[["LAND.SQUARE.FEET"]] <- as.numeric((gsub("[^0-9]","", bronx1[["LAND.SQUARE.FEET"]])))
m2<-lm(log(bronx1$SALE.PRICE)~log(bronx1$GROSS.SQUARE.FEET)+log(bronx1$LAND.SQUARE.FEET)+factor(bronx1$NEIGHBORHOOD))
summary(m2)
m2<-lm(log(bronx1$SALE.PRICE)~log(bronx1$GROSS.SQUARE.FEET)+log(bronx1$LAND.SQUARE.FEET)+factor(bronx1$NEIGHBORHOOD))
m2<-lm(log(bronx1$SALE.PRICE)~log(bronx1$GROSS.SQUARE.FEET)+log(bronx1$LAND.SQUARE.FEET)+factor(bronx1$NEIGHBORHOOD))
bronx1 <- bronx1  %>% select("LAND.SQUARE.FEET", "GROSS.SQUARE.FEET", "SALE.PRICE","NEIGHBORHOOD")
bronx1 <- na.omit(bronx1)
m2<-lm(log(bronx1$SALE.PRICE)~log(bronx1$GROSS.SQUARE.FEET)+log(bronx1$LAND.SQUARE.FEET)+factor(bronx1$NEIGHBORHOOD))
brox1
bronx1
str(bronx1)
m2<-lm(log(bronx1$SALE.PRICE)~log(bronx1$GROSS.SQUARE.FEET)+log(bronx1$LAND.SQUARE.FEET)+factor(bronx1$NEIGHBORHOOD))
bronx1 <- na.omit(bronx1)
str(bronx1)
m2<-lm(log(bronx1$SALE.PRICE)~log(bronx1$GROSS.SQUARE.FEET)+log(bronx1$LAND.SQUARE.FEET)+factor(bronx1$NEIGHBORHOOD))
m2<-lm(bronx1$SALE.PRICE~bronx1$GROSS.SQUARE.FEET+bronx1$LAND.SQUARE.FEET+factor(bronx1$NEIGHBORHOOD))
summary(m2)
plot(resid(m2))
# Suppress intercept - using "0+ ..."
m2a<-lm(log(bronx1$SALE.PRICE)~0+log(bronx1$GROSS.SQUARE.FEET)+log(bronx1$LAND.SQUARE.FEET)+factor(bronx1$NEIGHBORHOOD))
# Suppress intercept - using "0+ ..."
m2a<-lm(bronx1$SALE.PRICE+bronx1$GROSS.SQUARE.FEET+bronx1$LAND.SQUARE.FEET+factor(bronx1$NEIGHBORHOOD))
# Suppress intercept - using "0+ ..."
m2a<-lm(bronx1$SALE.PRICE+bronx1$GROSS.SQUARE.FEET+bronx1$LAND.SQUARE.FEET+factor(bronx1$NEIGHBORHOOD)
# Suppress intercept - using "0+ ..."
m2a<-lm(bronx1$SALE.PRICE+bronx1$GROSS.SQUARE.FEET+bronx1$LAND.SQUARE.FEET+factor(bronx1$NEIGHBORHOOD))
m2<-lm(bronx1$SALE.PRICE~bronx1$GROSS.SQUARE.FEET+bronx1$LAND.SQUARE.FEET)+factor(bronx1$NEIGHBORHOOD))
# Suppress intercept - using "0+ ..."
m2a<-lm(log(bronx1$SALE.PRICE)~0+bronx1$GROSS.SQUARE.FEET+bronx1$LAND.SQUARE.FEET+factor(bronx1$NEIGHBORHOOD))
# Suppress intercept - using "0+ ..."
m2a<-lm(bronx1$SALE.PRICE~0+bronx1$GROSS.SQUARE.FEET+bronx1$LAND.SQUARE.FEET+factor(bronx1$NEIGHBORHOOD))
summary(m2a)
plot(resid(m2a))
#faster xls reader but requires perl!
bronx1<- read.csv("C:/Users/91983/OneDrive/Desktop/RPI-material/DA/Assignment4/NYC_Citywide_Annualized_Calendar_Sales_Update.csv")
bronx1<-bronx1[which(bronx1$GROSS.SQUARE.FEET!="0" & bronx1$LAND.SQUARE.FEET!="0" & bronx1$SALE.PRICE!="$0"),]
bronx1[["GROSS.SQUARE.FEET"]] <- as.numeric((gsub("[^0-9]","", bronx1[["GROSS.SQUARE.FEET"]])))
bronx1[["LAND.SQUARE.FEET"]] <- as.numeric((gsub("[^0-9]","", bronx1[["LAND.SQUARE.FEET"]])))
bronx1 <- bronx1  %>% select("LAND.SQUARE.FEET", "GROSS.SQUARE.FEET", "SALE.PRICE","NEIGHBORHOOD","BUILDING.CLASS.CATEGORY")
# Model 3
m3<-lm(bronx1$SALE.PRICE~0+bronx1$GROSS.SQUARE.FEET+bronx1$LAND.SQUARE.FEET+factor(bronx1$NEIGHBORHOOD)+factor(bronx1$BUILDING.CLASS.CATEGORY))
summary(m3)
plot(resid(m3))
bronx1$SALE.PRICE<-sub("\\$","",bronx1$SALE.PRICE)
bronx1$SALE.PRICE<-as.numeric(gsub(",","", bronx1$SALE.PRICE))
bronx1$GROSS.SQUARE.FEET<-as.numeric(gsub(",","", bronx1$GROSS.SQUARE.FEET))
bronx1$LAND.SQUARE.FEET<-as.numeric(gsub(",","", bronx1$LAND.SQUARE.FEET))
bronx1$SALE.DATE<- as.Date(gsub("[^]:digit:]]","",bronx1$SALE.DATE))
bronx1$ZIP.CODE<- as.character(gsub("[^]:digit:]]","",bronx1$ZIP.CODE))
minprice<-10000
bronx1<-bronx1[which(bronx1$SALE.PRICE>=minprice),]
nval<-dim(bronx1)[1]
bronx1$ADDRESSONLY<- gsub("[,][[:print:]]*","",gsub("[ ]+","",trim(bronx1$ADDRESS))) bronxadd<-unique(data.frame(bronx1$ADDRESSONLY, bronx1$ZIP.CODE,stringsAsFactors=FALSE)) names(bronxadd)<-c("ADDRESSONLY","ZIP.CODE") bronxadd<-bronxadd[order(bronxadd$ADDRESSONLY),] duplicates<-duplicated(bronx1$ADDRESSONLY)
for(i in 1:2345) {
if(duplicates[i]==FALSE) dupadd<-bronxadd[bronxadd$duplicates,1]
}#what are we doing with dupadd?
nsample=450
addsample<-bronxadd[sample.int(dim(bronxadd),size=nsample),]#I use nval here
# may need to install this package
library(ggmap)
addrlist<-paste(addsample$ADDRESSONLY, "NY", addsample$ZIP.CODE, "US", sep=" ")
querylist<-geocode(addrlist) #This is cool. Take a break.
matched<-(querylist$lat!=0 &&querylist$lon!=0) addsample<-cbind(addsample,querylist$lat,querylist$lon)
names(addsample)<-c("ADDRESSONLY","ZIPCODE","Latitude","Longitude")# correct the column na adduse<-merge(bronx1,addsample)
adduse<-adduse[!is.na(adduse$Latitude),]
mapcoord<-adduse[,c(2,3,24,25)]
table(mapcoord$NEIGHBORHOOD)
mapcoord$NEIGHBORHOOD <- as.factor(mapcoord$NEIGHBORHOOD)
map <- get_map(location = 'Bronx', zoom = 12)#Zoom 11 or 12
ggmap(map) + geom_point(aes(x = mapcoord$Longitude, y = mapcoord$Latitude, size =1, color=mapcoord$NEIGHBORHOOD), data = mapcoord) +theme(legend.position = "none")
mapmeans<-cbind(adduse,as.numeric(mapcoord$NEIGHBORHOOD))
colnames(mapmeans)[26] <- "NEIGHBORHOOD" #This is the right way of renaming.
keeps <- c("ZIP.CODE","NEIGHBORHOOD","TOTAL.UNITS","LAND.SQUARE.FEET","GROSS.SQUARE.FEET","SALE.PRICE","Latitude","Longitude")
mapmeans<-mapmeans[keeps]#Dropping others
mapmeans$NEIGHBORHOOD<-as.numeric(mapcoord$NEIGHBORHOOD)
#faster xls reader but requires perl!
bronx1<- read.csv("C:/Users/91983/OneDrive/Desktop/RPI-material/DA/Assignment4/NYC_Citywide_Annualized_Calendar_Sales_Update.csv")
bronx1$SALE.PRICE<-sub("\\$","",bronx1$SALE.PRICE)
bronx1$SALE.PRICE<-as.numeric(gsub(",","", bronx1$SALE.PRICE))
bronx1$GROSS.SQUARE.FEET<-as.numeric(gsub(",","", bronx1$GROSS.SQUARE.FEET))
bronx1$LAND.SQUARE.FEET<-as.numeric(gsub(",","", bronx1$LAND.SQUARE.FEET))
bronx1$SALE.DATE<- as.Date(gsub("[^]:digit:]]","",bronx1$SALE.DATE))
bronx1$YEAR.BUILT<- as.numeric(gsub("[^]:digit:]]","",bronx1$YEAR.BUILT))
bronx1$ZIP.CODE<- as.character(gsub("[^]:digit:]]","",bronx1$ZIP.CODE))
minprice<-10000
bronx1<-bronx1[which(bronx1$SALE.PRICE>=minprice),]
nval<-dim(bronx1)[1]
bronx1$ADDRESSONLY<- gsub("[,][[:print:]]*","",gsub("[ ]+","",trim(bronx1$ADDRESS))) bronxadd<-unique(data.frame(bronx1$ADDRESSONLY, bronx1$ZIP.CODE,stringsAsFactors=FALSE)) names(bronxadd)<-c("ADDRESSONLY","ZIP.CODE") bronxadd<-bronxadd[order(bronxadd$ADDRESSONLY),] duplicates<-duplicated(bronx1$ADDRESSONLY)
for(i in 1:2345) {
if(duplicates[i]==FALSE) dupadd<-bronxadd[bronxadd$duplicates,1]
}#what are we doing with dupadd?
bronx1$SALE.PRICE<-sub("\\$","",bronx1$SALE.PRICE)
bronx1$SALE.PRICE<-as.numeric(gsub(",","", bronx1$SALE.PRICE))
bronx1$GROSS.SQUARE.FEET<-as.numeric(gsub(",","", bronx1$GROSS.SQUARE.FEET))
bronx1$LAND.SQUARE.FEET<-as.numeric(gsub(",","", bronx1$LAND.SQUARE.FEET))
bronx1$SALE.DATE<- as.Date(gsub("[^]:digit:]]","",bronx1$SALE.DATE))
bronx1$ZIP.CODE<- as.character(gsub("[^]:digit:]]","",bronx1$ZIP.CODE))
minprice<-10000
bronx1<-bronx1[which(bronx1$SALE.PRICE>=minprice),]
nval<-dim(bronx1)[1]
bronx1$ADDRESSONLY<- gsub("[,][[:print:]]*","",gsub("[ ]+","",trim(bronx1$ADDRESS))) bronxadd<-unique(data.frame(bronx1$ADDRESSONLY, bronx1$ZIP.CODE,stringsAsFactors=FALSE)) names(bronxadd)<-c("ADDRESSONLY","ZIP.CODE") bronxadd<-bronxadd[order(bronxadd$ADDRESSONLY),] duplicates<-duplicated(bronx1$ADDRESSONLY)
bronx1$ADDRESSONLY<- gsub("[,][[:print:]]*","",gsub("[ ]+","",trim(bronx1$ADDRESS))) bronxadd<-unique(data.frame(bronx1$ADDRESSONLY, bronx1$ZIP.CODE,stringsAsFactors=FALSE)) names(bronxadd)<-c("ADDRESS","ZIP.CODE") bronxadd<-bronxadd[order(bronxadd$ADDRESSONLY),] duplicates<-duplicated(bronx1$ADDRESSONLY)
bronx1$ADDRESSONLY<- gsub("[,][[:print:]]*","",gsub("[ ]+","",trim(bronx1$ADDRESS))) bronxadd<-unique(data.frame(bronx1$ADDRESS, bronx1$ZIP.CODE,stringsAsFactors=FALSE)) names(bronxadd)<-c("ADDRESS","ZIP.CODE") bronxadd<-bronxadd[order(bronxadd$ADDRESS),] duplicates<-duplicated(bronx1$ADDRESS)
bronx1$ADDRESSONLY<- gsub("[,][[:print:]]*","",gsub("[ ]+","",trim(bronx1$ADDRESS))) bronxadd<-unique(data.frame(bronx1$ADDRESSONLY, bronx1$ZIP.CODE,stringsAsFactors=FALSE)) names(bronxadd)<-c("ADDRESSONLY","ZIP.CODE") bronxadd<-bronxadd[order(bronxadd$ADDRESSONLY),] duplicates<-duplicated(bronx1$ADDRESSONLY)
#faster xls reader but requires perl!
bronx1<- read.csv("C:/Users/91983/OneDrive/Desktop/RPI-material/DA/Assignment4/NYC_Citywide_Annualized_Calendar_Sales_Update.csv")
bronx1<-bronx1[which(bronx1$GROSS.SQUARE.FEET!="0" & bronx1$LAND.SQUARE.FEET!="0" & bronx1$SALE.PRICE!="$0"),]
attach(bronx1)
bronx1$SALE.PRICE<-sub("\\$","",bronx1$SALE.PRICE)
bronx1$SALE.PRICE<-as.numeric(gsub(",","", bronx1$SALE.PRICE))
bronx1$GROSS.SQUARE.FEET<-as.numeric(gsub(",","", bronx1$GROSS.SQUARE.FEET))
bronx1$LAND.SQUARE.FEET<-as.numeric(gsub(",","", bronx1$LAND.SQUARE.FEET))
bronx1$SALE.DATE<- as.Date(gsub("[^]:digit:]]","",bronx1$SALE.DATE))
bronx1$YEAR.BUILT<- as.numeric(gsub("[^]:digit:]]","",bronx1$YEAR.BUILT))
bronx1$ZIP.CODE<- as.character(gsub("[^]:digit:]]","",bronx1$ZIP.CODE))
minprice<-10000
bronx1<-bronx1[which(bronx1$SALE.PRICE>=minprice),]
nval<-dim(bronx1)[1]
bronx1$ADDRESSONLY<- gsub("[,][[:print:]]*","",gsub("[ ]+","",trim(bronx1$ADDRESS))) bronxadd<-unique(data.frame(bronx1$ADDRESSONLY, bronx1$ZIP.CODE,stringsAsFactors=FALSE)) names(bronxadd)<-c("ADDRESSONLY","ZIP.CODE") bronxadd<-bronxadd[order(bronxadd$ADDRESSONLY),] duplicates<-duplicated(bronx1$ADDRESSONLY)
bronxadd<-unique(data.frame(bronx1$ADDRESSONLY, bronx1$ZIP.CODE,stringsAsFactors=FALSE)) names(bronxadd)<-c("ADDRESSONLY","ZIP.CODE") bronxadd<-bronxadd[order(bronxadd$ADDRESSONLY),] duplicates<-duplicated(bronx1$ADDRESSONLY)
bronx1$ADDRESSONLY<- gsub("[,][[:print:]]*","",gsub("[ ]+","",trim(bronx1$ADDRESS)))
bronxadd<-unique(data.frame(bronx1$ADDRESSONLY, bronx1$ZIP.CODE,stringsAsFactors=FALSE))
names(bronxadd)<-c("ADDRESSONLY","ZIP.CODE")
bronxadd<-bronxadd[order(bronxadd$ADDRESSONLY),]
duplicates<-duplicated(bronx1$ADDRESSONLY)
for(i in 1:2345) {
if(duplicates[i]==FALSE) dupadd<-bronxadd[bronxadd$duplicates,1]
}#what are we doing with dupadd?
nsample=450
addsample<-bronxadd[sample.int(dim(bronxadd),size=nsample),]#I use nval here
# may need to install this package
library(ggmap)
addrlist<-paste(addsample$ADDRESSONLY, "NY", addsample$ZIP.CODE, "US", sep=" ")
querylist<-geocode(addrlist) #This is cool. Take a break.
matched<-(querylist$lat!=0 &&querylist$lon!=0) addsample<-cbind(addsample,querylist$lat,querylist$lon)
addsample<-bronxadd[sample.int(dim(bronxadd),size=nsample),]#I use nval here
nsample=450
addsample<-bronxadd[sample.int(dim(bronxadd),size=nsample),]#I use nval here
